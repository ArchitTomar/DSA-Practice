class Solution {
    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) return head;

        // Initialize pointers for odd and even
        ListNode odd = head;
        ListNode even = head.next;
        ListNode evenHead = even;  // Store the head of even-indexed nodes

        // Loop to reorder the odd and even indexed nodes
        while (even != null && even.next != null) {
            odd.next = odd.next.next;  // Move odd pointer to the next odd node
            even.next = even.next.next;  // Move even pointer to the next even node

            odd = odd.next;  // Move the odd pointer forward
            even = even.next;  // Move the even pointer forward
        }

        // Attach the even list after the odd list
        odd.next = evenHead;

        return head;  // Return the modified list
    }
}
